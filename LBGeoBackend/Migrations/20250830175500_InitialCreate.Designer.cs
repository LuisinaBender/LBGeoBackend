// <auto-generated />
using System;
using LBGeoBackend.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LBGeoBackend.Migrations
{
    [DbContext(typeof(LBGeoDbContext))]
    [Migration("20250830175500_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("LBGeoBackend.Models.Clientes", b =>
                {
                    b.Property<int>("id_cliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id_cliente"));

                    b.Property<bool>("Eliminado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("apellido")
                        .HasColumnType("longtext");

                    b.Property<string>("direccion")
                        .HasColumnType("longtext");

                    b.Property<string>("email")
                        .HasColumnType("longtext");

                    b.Property<string>("nombre")
                        .HasColumnType("longtext");

                    b.Property<int?>("nro_documento")
                        .HasColumnType("int");

                    b.Property<string>("telefono")
                        .HasColumnType("longtext");

                    b.HasKey("id_cliente");

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            id_cliente = 1,
                            Eliminado = false,
                            apellido = "Pérez",
                            direccion = "Calle Falsa 123",
                            email = "juan@example.com",
                            nombre = "Juan",
                            nro_documento = 12345678,
                            telefono = "3415551234"
                        },
                        new
                        {
                            id_cliente = 2,
                            Eliminado = false,
                            apellido = "Gómez",
                            direccion = "Av. Libertad 456",
                            email = "maria@example.com",
                            nombre = "María",
                            nro_documento = 87654321,
                            telefono = "3415555678"
                        },
                        new
                        {
                            id_cliente = 3,
                            Eliminado = false,
                            apellido = "López",
                            direccion = "San Juan 789",
                            email = "carlos@example.com",
                            nombre = "Carlos",
                            nro_documento = 11223344,
                            telefono = "3415551111"
                        },
                        new
                        {
                            id_cliente = 4,
                            Eliminado = false,
                            apellido = "Martínez",
                            direccion = "Mitre 321",
                            email = "ana@example.com",
                            nombre = "Ana",
                            nro_documento = 22334455,
                            telefono = "3415552222"
                        },
                        new
                        {
                            id_cliente = 5,
                            Eliminado = false,
                            apellido = "Sosa",
                            direccion = "Urquiza 654",
                            email = "pedro@example.com",
                            nombre = "Pedro",
                            nro_documento = 33445566,
                            telefono = "3415553333"
                        },
                        new
                        {
                            id_cliente = 6,
                            Eliminado = false,
                            apellido = "Fernández",
                            direccion = "Belgrano 987",
                            email = "lucia@example.com",
                            nombre = "Lucía",
                            nro_documento = 44556677,
                            telefono = "3415554444"
                        },
                        new
                        {
                            id_cliente = 7,
                            Eliminado = false,
                            apellido = "Ramírez",
                            direccion = "Italia 159",
                            email = "miguel@example.com",
                            nombre = "Miguel",
                            nro_documento = 55667788,
                            telefono = "3415555555"
                        },
                        new
                        {
                            id_cliente = 8,
                            Eliminado = false,
                            apellido = "Díaz",
                            direccion = "España 753",
                            email = "sofia@example.com",
                            nombre = "Sofía",
                            nro_documento = 66778899,
                            telefono = "3415556666"
                        },
                        new
                        {
                            id_cliente = 9,
                            Eliminado = false,
                            apellido = "Torres",
                            direccion = "Francia 852",
                            email = "diego@example.com",
                            nombre = "Diego",
                            nro_documento = 77889900,
                            telefono = "3415557777"
                        },
                        new
                        {
                            id_cliente = 10,
                            Eliminado = false,
                            apellido = "Molina",
                            direccion = "Brasil 951",
                            email = "valeria@example.com",
                            nombre = "Valeria",
                            nro_documento = 88990011,
                            telefono = "3415558888"
                        });
                });

            modelBuilder.Entity("LBGeoBackend.Models.Equivalencias", b =>
                {
                    b.Property<int>("id_equivalencia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id_equivalencia"));

                    b.Property<bool>("Eliminado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("codigo_OEM_equivalente")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("codigo_OEM_original")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id_equivalencia");

                    b.ToTable("Equivalencias");

                    b.HasData(
                        new
                        {
                            id_equivalencia = 1,
                            Eliminado = false,
                            codigo_OEM_equivalente = "EQ-001",
                            codigo_OEM_original = "OR-100"
                        },
                        new
                        {
                            id_equivalencia = 2,
                            Eliminado = false,
                            codigo_OEM_equivalente = "EQ-002",
                            codigo_OEM_original = "OR-200"
                        },
                        new
                        {
                            id_equivalencia = 3,
                            Eliminado = false,
                            codigo_OEM_equivalente = "EQ-003",
                            codigo_OEM_original = "OR-300"
                        },
                        new
                        {
                            id_equivalencia = 4,
                            Eliminado = false,
                            codigo_OEM_equivalente = "EQ-004",
                            codigo_OEM_original = "OR-400"
                        },
                        new
                        {
                            id_equivalencia = 5,
                            Eliminado = false,
                            codigo_OEM_equivalente = "EQ-005",
                            codigo_OEM_original = "OR-500"
                        },
                        new
                        {
                            id_equivalencia = 6,
                            Eliminado = false,
                            codigo_OEM_equivalente = "EQ-006",
                            codigo_OEM_original = "OR-600"
                        },
                        new
                        {
                            id_equivalencia = 7,
                            Eliminado = false,
                            codigo_OEM_equivalente = "EQ-007",
                            codigo_OEM_original = "OR-700"
                        },
                        new
                        {
                            id_equivalencia = 8,
                            Eliminado = false,
                            codigo_OEM_equivalente = "EQ-008",
                            codigo_OEM_original = "OR-800"
                        },
                        new
                        {
                            id_equivalencia = 9,
                            Eliminado = false,
                            codigo_OEM_equivalente = "EQ-009",
                            codigo_OEM_original = "OR-900"
                        },
                        new
                        {
                            id_equivalencia = 10,
                            Eliminado = false,
                            codigo_OEM_equivalente = "EQ-010",
                            codigo_OEM_original = "OR-1000"
                        });
                });

            modelBuilder.Entity("LBGeoBackend.Models.Proveedores", b =>
                {
                    b.Property<int>("id_proveedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id_proveedor"));

                    b.Property<bool>("Eliminado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("direccion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("email")
                        .HasColumnType("longtext");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("telefono")
                        .HasColumnType("longtext");

                    b.HasKey("id_proveedor");

                    b.ToTable("Proveedores");

                    b.HasData(
                        new
                        {
                            id_proveedor = 1,
                            Eliminado = false,
                            direccion = "San Martín 234",
                            email = "ventas@rosario.com",
                            nombre = "Repuestos Rosario",
                            telefono = "3414440000"
                        },
                        new
                        {
                            id_proveedor = 2,
                            Eliminado = false,
                            direccion = "Bv. Oroño 789",
                            email = "contacto@santafe.com",
                            nombre = "AutoPartes Santa Fe",
                            telefono = "3414441111"
                        },
                        new
                        {
                            id_proveedor = 3,
                            Eliminado = false,
                            direccion = "Córdoba 1234",
                            email = "info@central.com",
                            nombre = "Central Repuestos",
                            telefono = "3414442222"
                        },
                        new
                        {
                            id_proveedor = 4,
                            Eliminado = false,
                            direccion = "Mendoza 567",
                            email = "ventas@todomotor.com",
                            nombre = "Todo Motor",
                            telefono = "3414443333"
                        },
                        new
                        {
                            id_proveedor = 5,
                            Eliminado = false,
                            direccion = "San Luis 890",
                            email = "contacto@distsur.com",
                            nombre = "Distribuidora Sur",
                            telefono = "3414444444"
                        },
                        new
                        {
                            id_proveedor = 6,
                            Eliminado = false,
                            direccion = "Catamarca 321",
                            email = "express@repuestos.com",
                            nombre = "Repuestos Express",
                            telefono = "3414445555"
                        },
                        new
                        {
                            id_proveedor = 7,
                            Eliminado = false,
                            direccion = "Entre Ríos 654",
                            email = "info@partesymas.com",
                            nombre = "Partes y Más",
                            telefono = "3414446666"
                        },
                        new
                        {
                            id_proveedor = 8,
                            Eliminado = false,
                            direccion = "Salta 987",
                            email = "ventas@mundoauto.com",
                            nombre = "Mundo Auto",
                            telefono = "3414447777"
                        },
                        new
                        {
                            id_proveedor = 9,
                            Eliminado = false,
                            direccion = "Santa Fe 159",
                            email = "norte@repuestos.com",
                            nombre = "Repuestos Norte",
                            telefono = "3414448888"
                        },
                        new
                        {
                            id_proveedor = 10,
                            Eliminado = false,
                            direccion = "Buenos Aires 753",
                            email = "info@casarepuesto.com",
                            nombre = "La Casa del Repuesto",
                            telefono = "3414449999"
                        });
                });

            modelBuilder.Entity("LBGeoBackend.Models.Registros", b =>
                {
                    b.Property<int>("id_registro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id_registro"));

                    b.Property<string>("TipoAct")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<bool>("eliminado")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("id_registro_venta")
                        .HasColumnType("int");

                    b.Property<int>("id_repuesto")
                        .HasColumnType("int");

                    b.Property<decimal>("precio_total")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("precio_unitario")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("id_registro");

                    b.HasIndex("id_registro_venta");

                    b.HasIndex("id_repuesto");

                    b.ToTable("Registros");

                    b.HasData(
                        new
                        {
                            id_registro = 1,
                            TipoAct = "Salida",
                            cantidad = 2,
                            eliminado = false,
                            fecha = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            id_registro_venta = 1,
                            id_repuesto = 1,
                            precio_total = 30000m,
                            precio_unitario = 15000m
                        },
                        new
                        {
                            id_registro = 2,
                            TipoAct = "Salida",
                            cantidad = 1,
                            eliminado = false,
                            fecha = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            id_registro_venta = 2,
                            id_repuesto = 2,
                            precio_total = 12000m,
                            precio_unitario = 12000m
                        },
                        new
                        {
                            id_registro = 3,
                            TipoAct = "Salida",
                            cantidad = 3,
                            eliminado = false,
                            fecha = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            id_registro_venta = 3,
                            id_repuesto = 3,
                            precio_total = 24000m,
                            precio_unitario = 8000m
                        },
                        new
                        {
                            id_registro = 4,
                            TipoAct = "Salida",
                            cantidad = 1,
                            eliminado = false,
                            fecha = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            id_registro_venta = 4,
                            id_repuesto = 4,
                            precio_total = 5000m,
                            precio_unitario = 5000m
                        },
                        new
                        {
                            id_registro = 5,
                            TipoAct = "Salida",
                            cantidad = 2,
                            eliminado = false,
                            fecha = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            id_registro_venta = 5,
                            id_repuesto = 5,
                            precio_total = 12000m,
                            precio_unitario = 6000m
                        },
                        new
                        {
                            id_registro = 6,
                            TipoAct = "Salida",
                            cantidad = 1,
                            eliminado = false,
                            fecha = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            id_registro_venta = 6,
                            id_repuesto = 6,
                            precio_total = 20000m,
                            precio_unitario = 20000m
                        },
                        new
                        {
                            id_registro = 7,
                            TipoAct = "Salida",
                            cantidad = 1,
                            eliminado = false,
                            fecha = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            id_registro_venta = 7,
                            id_repuesto = 7,
                            precio_total = 35000m,
                            precio_unitario = 35000m
                        },
                        new
                        {
                            id_registro = 8,
                            TipoAct = "Salida",
                            cantidad = 2,
                            eliminado = false,
                            fecha = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            id_registro_venta = 8,
                            id_repuesto = 8,
                            precio_total = 14000m,
                            precio_unitario = 7000m
                        },
                        new
                        {
                            id_registro = 9,
                            TipoAct = "Salida",
                            cantidad = 1,
                            eliminado = false,
                            fecha = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            id_registro_venta = 9,
                            id_repuesto = 9,
                            precio_total = 25000m,
                            precio_unitario = 25000m
                        },
                        new
                        {
                            id_registro = 10,
                            TipoAct = "Salida",
                            cantidad = 1,
                            eliminado = false,
                            fecha = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            id_registro_venta = 10,
                            id_repuesto = 10,
                            precio_total = 30000m,
                            precio_unitario = 30000m
                        });
                });

            modelBuilder.Entity("LBGeoBackend.Models.RegistrosVentas", b =>
                {
                    b.Property<int>("id_registro_venta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id_registro_venta"));

                    b.Property<bool>("Eliminado")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<DateTime>("fecha_venta")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("id_cliente")
                        .HasColumnType("int");

                    b.Property<int>("id_repuesto")
                        .HasColumnType("int");

                    b.Property<decimal>("precio_total")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("precio_unitario")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("id_registro_venta");

                    b.HasIndex("id_cliente");

                    b.HasIndex("id_repuesto");

                    b.ToTable("RegistrosVentas");

                    b.HasData(
                        new
                        {
                            id_registro_venta = 1,
                            Eliminado = false,
                            cantidad = 2,
                            fecha_venta = new DateTime(2025, 8, 30, 14, 54, 58, 173, DateTimeKind.Local).AddTicks(257),
                            id_cliente = 1,
                            id_repuesto = 1,
                            precio_total = 30000m,
                            precio_unitario = 15000m
                        },
                        new
                        {
                            id_registro_venta = 2,
                            Eliminado = false,
                            cantidad = 1,
                            fecha_venta = new DateTime(2025, 8, 30, 14, 54, 58, 173, DateTimeKind.Local).AddTicks(258),
                            id_cliente = 2,
                            id_repuesto = 2,
                            precio_total = 12000m,
                            precio_unitario = 12000m
                        },
                        new
                        {
                            id_registro_venta = 3,
                            Eliminado = false,
                            cantidad = 3,
                            fecha_venta = new DateTime(2025, 8, 30, 14, 54, 58, 173, DateTimeKind.Local).AddTicks(260),
                            id_cliente = 3,
                            id_repuesto = 3,
                            precio_total = 24000m,
                            precio_unitario = 8000m
                        },
                        new
                        {
                            id_registro_venta = 4,
                            Eliminado = false,
                            cantidad = 1,
                            fecha_venta = new DateTime(2025, 8, 30, 14, 54, 58, 173, DateTimeKind.Local).AddTicks(262),
                            id_cliente = 4,
                            id_repuesto = 4,
                            precio_total = 5000m,
                            precio_unitario = 5000m
                        },
                        new
                        {
                            id_registro_venta = 5,
                            Eliminado = false,
                            cantidad = 2,
                            fecha_venta = new DateTime(2025, 8, 30, 14, 54, 58, 173, DateTimeKind.Local).AddTicks(264),
                            id_cliente = 5,
                            id_repuesto = 5,
                            precio_total = 12000m,
                            precio_unitario = 6000m
                        },
                        new
                        {
                            id_registro_venta = 6,
                            Eliminado = false,
                            cantidad = 1,
                            fecha_venta = new DateTime(2025, 8, 30, 14, 54, 58, 173, DateTimeKind.Local).AddTicks(266),
                            id_cliente = 6,
                            id_repuesto = 6,
                            precio_total = 20000m,
                            precio_unitario = 20000m
                        },
                        new
                        {
                            id_registro_venta = 7,
                            Eliminado = false,
                            cantidad = 1,
                            fecha_venta = new DateTime(2025, 8, 30, 14, 54, 58, 173, DateTimeKind.Local).AddTicks(270),
                            id_cliente = 7,
                            id_repuesto = 7,
                            precio_total = 35000m,
                            precio_unitario = 35000m
                        },
                        new
                        {
                            id_registro_venta = 8,
                            Eliminado = false,
                            cantidad = 2,
                            fecha_venta = new DateTime(2025, 8, 30, 14, 54, 58, 173, DateTimeKind.Local).AddTicks(276),
                            id_cliente = 8,
                            id_repuesto = 8,
                            precio_total = 14000m,
                            precio_unitario = 7000m
                        },
                        new
                        {
                            id_registro_venta = 9,
                            Eliminado = false,
                            cantidad = 1,
                            fecha_venta = new DateTime(2025, 8, 30, 14, 54, 58, 173, DateTimeKind.Local).AddTicks(277),
                            id_cliente = 9,
                            id_repuesto = 9,
                            precio_total = 25000m,
                            precio_unitario = 25000m
                        },
                        new
                        {
                            id_registro_venta = 10,
                            Eliminado = false,
                            cantidad = 1,
                            fecha_venta = new DateTime(2025, 8, 30, 14, 54, 58, 173, DateTimeKind.Local).AddTicks(279),
                            id_cliente = 10,
                            id_repuesto = 10,
                            precio_total = 30000m,
                            precio_unitario = 30000m
                        });
                });

            modelBuilder.Entity("LBGeoBackend.Models.Repuestos", b =>
                {
                    b.Property<int>("id_repuesto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id_repuesto"));

                    b.Property<bool>("Eliminado")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("anio")
                        .HasColumnType("int");

                    b.Property<string>("codigo_OEM_original")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("id_equivalencia")
                        .HasColumnType("int");

                    b.Property<int>("id_proveedor")
                        .HasColumnType("int");

                    b.Property<string>("imagen_url")
                        .HasColumnType("longtext");

                    b.Property<string>("marca_OEM")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("marca_auto")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("modelo_auto")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("motor")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("precio")
                        .HasColumnType("int");

                    b.Property<int>("stock")
                        .HasColumnType("int");

                    b.Property<string>("texto")
                        .HasColumnType("longtext");

                    b.HasKey("id_repuesto");

                    b.HasIndex("id_equivalencia");

                    b.HasIndex("id_proveedor");

                    b.ToTable("Repuestos");

                    b.HasData(
                        new
                        {
                            id_repuesto = 1,
                            Eliminado = false,
                            anio = 2020,
                            codigo_OEM_original = "OR-100",
                            id_equivalencia = 1,
                            id_proveedor = 1,
                            imagen_url = "https://http2.mlstatic.com/D_NQ_NP_616775-MLA76602933995_052024-O.webp",
                            marca_OEM = "Toyota",
                            marca_auto = "Toyota",
                            modelo_auto = "Corolla",
                            motor = "1.8L",
                            precio = 15000,
                            stock = 15,
                            texto = "Filtro de aire original para Toyota Corolla"
                        },
                        new
                        {
                            id_repuesto = 2,
                            Eliminado = false,
                            anio = 2019,
                            codigo_OEM_original = "OR-200",
                            id_equivalencia = 2,
                            id_proveedor = 2,
                            imagen_url = "https://http2.mlstatic.com/D_NQ_NP_836797-MLA80954735198_122024-O.webp",
                            marca_OEM = "Ford",
                            marca_auto = "Ford",
                            modelo_auto = "Fiesta",
                            motor = "1.6L",
                            precio = 12000,
                            stock = 10,
                            texto = "Pastillas de freno originales para Ford Fiesta"
                        },
                        new
                        {
                            id_repuesto = 3,
                            Eliminado = false,
                            anio = 2021,
                            codigo_OEM_original = "OR-300",
                            id_equivalencia = 3,
                            id_proveedor = 3,
                            imagen_url = "https://http2.mlstatic.com/D_NQ_NP_644123-MLA81012345678_052024-O.webp",
                            marca_OEM = "Chevrolet",
                            marca_auto = "Chevrolet",
                            modelo_auto = "Onix",
                            motor = "1.4L",
                            precio = 8000,
                            stock = 20,
                            texto = "Bujía para Chevrolet Onix"
                        },
                        new
                        {
                            id_repuesto = 4,
                            Eliminado = false,
                            anio = 2022,
                            codigo_OEM_original = "OR-400",
                            id_equivalencia = 4,
                            id_proveedor = 4,
                            imagen_url = "https://http2.mlstatic.com/D_NQ_NP_123456-MLA81234567890_052024-O.webp",
                            marca_OEM = "Shell",
                            marca_auto = "Universal",
                            modelo_auto = "Todos",
                            motor = "Todos",
                            precio = 5000,
                            stock = 50,
                            texto = "Aceite sintético 5W30"
                        },
                        new
                        {
                            id_repuesto = 5,
                            Eliminado = false,
                            anio = 2018,
                            codigo_OEM_original = "OR-500",
                            id_equivalencia = 5,
                            id_proveedor = 5,
                            imagen_url = "https://http2.mlstatic.com/D_NQ_NP_987654-MLA81234567891_052024-O.webp",
                            marca_OEM = "Volkswagen",
                            marca_auto = "Volkswagen",
                            modelo_auto = "Gol",
                            motor = "1.6L",
                            precio = 6000,
                            stock = 18,
                            texto = "Filtro de aceite para VW Gol"
                        },
                        new
                        {
                            id_repuesto = 6,
                            Eliminado = false,
                            anio = 2017,
                            codigo_OEM_original = "OR-600",
                            id_equivalencia = 6,
                            id_proveedor = 6,
                            imagen_url = "https://http2.mlstatic.com/D_NQ_NP_456789-MLA81234567892_052024-O.webp",
                            marca_OEM = "Renault",
                            marca_auto = "Renault",
                            modelo_auto = "Clio",
                            motor = "1.2L",
                            precio = 20000,
                            stock = 8,
                            texto = "Amortiguador delantero Renault Clio"
                        },
                        new
                        {
                            id_repuesto = 7,
                            Eliminado = false,
                            anio = 2020,
                            codigo_OEM_original = "OR-700",
                            id_equivalencia = 7,
                            id_proveedor = 7,
                            imagen_url = "https://http2.mlstatic.com/D_NQ_NP_567890-MLA81234567893_052024-O.webp",
                            marca_OEM = "Peugeot",
                            marca_auto = "Peugeot",
                            modelo_auto = "208",
                            motor = "1.6L",
                            precio = 35000,
                            stock = 5,
                            texto = "Kit de embrague Peugeot 208"
                        },
                        new
                        {
                            id_repuesto = 8,
                            Eliminado = false,
                            anio = 2016,
                            codigo_OEM_original = "OR-800",
                            id_equivalencia = 8,
                            id_proveedor = 8,
                            imagen_url = "https://http2.mlstatic.com/D_NQ_NP_678901-MLA81234567894_052024-O.webp",
                            marca_OEM = "Fiat",
                            marca_auto = "Fiat",
                            modelo_auto = "Uno",
                            motor = "1.3L",
                            precio = 7000,
                            stock = 12,
                            texto = "Correa de distribución Fiat Uno"
                        },
                        new
                        {
                            id_repuesto = 9,
                            Eliminado = false,
                            anio = 2019,
                            codigo_OEM_original = "OR-900",
                            id_equivalencia = 9,
                            id_proveedor = 9,
                            imagen_url = "https://http2.mlstatic.com/D_NQ_NP_789012-MLA81234567895_052024-O.webp",
                            marca_OEM = "Honda",
                            marca_auto = "Honda",
                            modelo_auto = "Civic",
                            motor = "2.0L",
                            precio = 25000,
                            stock = 7,
                            texto = "Radiador Honda Civic"
                        },
                        new
                        {
                            id_repuesto = 10,
                            Eliminado = false,
                            anio = 2023,
                            codigo_OEM_original = "OR-1000",
                            id_equivalencia = 10,
                            id_proveedor = 10,
                            imagen_url = "https://http2.mlstatic.com/D_NQ_NP_890123-MLA81234567896_052024-O.webp",
                            marca_OEM = "Willard",
                            marca_auto = "Universal",
                            modelo_auto = "Todos",
                            motor = "Todos",
                            precio = 30000,
                            stock = 25,
                            texto = "Batería 12V 60Ah"
                        });
                });

            modelBuilder.Entity("LBGeoBackend.Models.Usuarios", b =>
                {
                    b.Property<int>("id_usuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id_usuario"));

                    b.Property<bool>("Eliminado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Rol")
                        .HasColumnType("longtext");

                    b.Property<string>("apellido")
                        .HasColumnType("longtext");

                    b.Property<string>("email")
                        .HasColumnType("longtext");

                    b.Property<string>("nombre")
                        .HasColumnType("longtext");

                    b.HasKey("id_usuario");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            id_usuario = 1,
                            Eliminado = false,
                            Rol = "Administrador",
                            apellido = "Principal",
                            email = "admin@lbgeo.com",
                            nombre = "Admin"
                        },
                        new
                        {
                            id_usuario = 2,
                            Eliminado = false,
                            Rol = "Vendedor",
                            apellido = "Ventas",
                            email = "ventas@lbgeo.com",
                            nombre = "Empleado"
                        },
                        new
                        {
                            id_usuario = 3,
                            Eliminado = false,
                            Rol = "Vendedor",
                            apellido = "García",
                            email = "sergio@lbgeo.com",
                            nombre = "Sergio"
                        },
                        new
                        {
                            id_usuario = 4,
                            Eliminado = false,
                            Rol = "Vendedor",
                            apellido = "Ruiz",
                            email = "paula@lbgeo.com",
                            nombre = "Paula"
                        },
                        new
                        {
                            id_usuario = 5,
                            Eliminado = false,
                            Rol = "Vendedor",
                            apellido = "Mendez",
                            email = "lucas@lbgeo.com",
                            nombre = "Lucas"
                        },
                        new
                        {
                            id_usuario = 6,
                            Eliminado = false,
                            Rol = "Vendedor",
                            apellido = "Sosa",
                            email = "florencia@lbgeo.com",
                            nombre = "Florencia"
                        },
                        new
                        {
                            id_usuario = 7,
                            Eliminado = false,
                            Rol = "Vendedor",
                            apellido = "Paz",
                            email = "martin@lbgeo.com",
                            nombre = "Martín"
                        },
                        new
                        {
                            id_usuario = 8,
                            Eliminado = false,
                            Rol = "Vendedor",
                            apellido = "Vega",
                            email = "gabriela@lbgeo.com",
                            nombre = "Gabriela"
                        },
                        new
                        {
                            id_usuario = 9,
                            Eliminado = false,
                            Rol = "Vendedor",
                            apellido = "Silva",
                            email = "javier@lbgeo.com",
                            nombre = "Javier"
                        },
                        new
                        {
                            id_usuario = 10,
                            Eliminado = false,
                            Rol = "Vendedor",
                            apellido = "Luna",
                            email = "rocio@lbgeo.com",
                            nombre = "Rocío"
                        });
                });

            modelBuilder.Entity("LBGeoBackend.Models.Registros", b =>
                {
                    b.HasOne("LBGeoBackend.Models.RegistrosVentas", "RegistroVenta")
                        .WithMany("Registros")
                        .HasForeignKey("id_registro_venta")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("LBGeoBackend.Models.Repuestos", "Repuesto")
                        .WithMany("Registros")
                        .HasForeignKey("id_repuesto")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("RegistroVenta");

                    b.Navigation("Repuesto");
                });

            modelBuilder.Entity("LBGeoBackend.Models.RegistrosVentas", b =>
                {
                    b.HasOne("LBGeoBackend.Models.Clientes", "Cliente")
                        .WithMany("Ventas")
                        .HasForeignKey("id_cliente")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LBGeoBackend.Models.Repuestos", "Repuesto")
                        .WithMany("Ventas")
                        .HasForeignKey("id_repuesto")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Repuesto");
                });

            modelBuilder.Entity("LBGeoBackend.Models.Repuestos", b =>
                {
                    b.HasOne("LBGeoBackend.Models.Equivalencias", "Equivalencia")
                        .WithMany("Repuestos")
                        .HasForeignKey("id_equivalencia")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("LBGeoBackend.Models.Proveedores", "Proveedor")
                        .WithMany("Repuestos")
                        .HasForeignKey("id_proveedor")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Equivalencia");

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("LBGeoBackend.Models.Clientes", b =>
                {
                    b.Navigation("Ventas");
                });

            modelBuilder.Entity("LBGeoBackend.Models.Equivalencias", b =>
                {
                    b.Navigation("Repuestos");
                });

            modelBuilder.Entity("LBGeoBackend.Models.Proveedores", b =>
                {
                    b.Navigation("Repuestos");
                });

            modelBuilder.Entity("LBGeoBackend.Models.RegistrosVentas", b =>
                {
                    b.Navigation("Registros");
                });

            modelBuilder.Entity("LBGeoBackend.Models.Repuestos", b =>
                {
                    b.Navigation("Registros");

                    b.Navigation("Ventas");
                });
#pragma warning restore 612, 618
        }
    }
}
